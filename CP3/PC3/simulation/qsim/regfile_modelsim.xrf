vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/17.0/PC3/dffe.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/regfile.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/regfile_tb.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/tristate_buffer.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/register.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/decoder.v
source_file = 1, C:/intelFPGA_lite/17.0/PC3/db/regfile.cbx.xml
design_name = register
instance = comp, \out[0]~output , out[0]~output, register, 1
instance = comp, \out[1]~output , out[1]~output, register, 1
instance = comp, \out[2]~output , out[2]~output, register, 1
instance = comp, \out[3]~output , out[3]~output, register, 1
instance = comp, \out[4]~output , out[4]~output, register, 1
instance = comp, \out[5]~output , out[5]~output, register, 1
instance = comp, \out[6]~output , out[6]~output, register, 1
instance = comp, \out[7]~output , out[7]~output, register, 1
instance = comp, \out[8]~output , out[8]~output, register, 1
instance = comp, \out[9]~output , out[9]~output, register, 1
instance = comp, \out[10]~output , out[10]~output, register, 1
instance = comp, \out[11]~output , out[11]~output, register, 1
instance = comp, \out[12]~output , out[12]~output, register, 1
instance = comp, \out[13]~output , out[13]~output, register, 1
instance = comp, \out[14]~output , out[14]~output, register, 1
instance = comp, \out[15]~output , out[15]~output, register, 1
instance = comp, \out[16]~output , out[16]~output, register, 1
instance = comp, \out[17]~output , out[17]~output, register, 1
instance = comp, \out[18]~output , out[18]~output, register, 1
instance = comp, \out[19]~output , out[19]~output, register, 1
instance = comp, \out[20]~output , out[20]~output, register, 1
instance = comp, \out[21]~output , out[21]~output, register, 1
instance = comp, \out[22]~output , out[22]~output, register, 1
instance = comp, \out[23]~output , out[23]~output, register, 1
instance = comp, \out[24]~output , out[24]~output, register, 1
instance = comp, \out[25]~output , out[25]~output, register, 1
instance = comp, \out[26]~output , out[26]~output, register, 1
instance = comp, \out[27]~output , out[27]~output, register, 1
instance = comp, \out[28]~output , out[28]~output, register, 1
instance = comp, \out[29]~output , out[29]~output, register, 1
instance = comp, \out[30]~output , out[30]~output, register, 1
instance = comp, \out[31]~output , out[31]~output, register, 1
instance = comp, \clk~input , clk~input, register, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, register, 1
instance = comp, \in[0]~input , in[0]~input, register, 1
instance = comp, \register_dff[0].deff|q~feeder , register_dff[0].deff|q~feeder, register, 1
instance = comp, \clr~input , clr~input, register, 1
instance = comp, \clr~inputclkctrl , clr~inputclkctrl, register, 1
instance = comp, \en~input , en~input, register, 1
instance = comp, \register_dff[0].deff|q , register_dff[0].deff|q, register, 1
instance = comp, \in[1]~input , in[1]~input, register, 1
instance = comp, \register_dff[1].deff|q~feeder , register_dff[1].deff|q~feeder, register, 1
instance = comp, \register_dff[1].deff|q , register_dff[1].deff|q, register, 1
instance = comp, \in[2]~input , in[2]~input, register, 1
instance = comp, \register_dff[2].deff|q , register_dff[2].deff|q, register, 1
instance = comp, \in[3]~input , in[3]~input, register, 1
instance = comp, \register_dff[3].deff|q , register_dff[3].deff|q, register, 1
instance = comp, \in[4]~input , in[4]~input, register, 1
instance = comp, \register_dff[4].deff|q~feeder , register_dff[4].deff|q~feeder, register, 1
instance = comp, \register_dff[4].deff|q , register_dff[4].deff|q, register, 1
instance = comp, \in[5]~input , in[5]~input, register, 1
instance = comp, \register_dff[5].deff|q , register_dff[5].deff|q, register, 1
instance = comp, \in[6]~input , in[6]~input, register, 1
instance = comp, \register_dff[6].deff|q~feeder , register_dff[6].deff|q~feeder, register, 1
instance = comp, \register_dff[6].deff|q , register_dff[6].deff|q, register, 1
instance = comp, \in[7]~input , in[7]~input, register, 1
instance = comp, \register_dff[7].deff|q , register_dff[7].deff|q, register, 1
instance = comp, \in[8]~input , in[8]~input, register, 1
instance = comp, \register_dff[8].deff|q~feeder , register_dff[8].deff|q~feeder, register, 1
instance = comp, \register_dff[8].deff|q , register_dff[8].deff|q, register, 1
instance = comp, \in[9]~input , in[9]~input, register, 1
instance = comp, \register_dff[9].deff|q~feeder , register_dff[9].deff|q~feeder, register, 1
instance = comp, \register_dff[9].deff|q , register_dff[9].deff|q, register, 1
instance = comp, \in[10]~input , in[10]~input, register, 1
instance = comp, \register_dff[10].deff|q~feeder , register_dff[10].deff|q~feeder, register, 1
instance = comp, \register_dff[10].deff|q , register_dff[10].deff|q, register, 1
instance = comp, \in[11]~input , in[11]~input, register, 1
instance = comp, \register_dff[11].deff|q~feeder , register_dff[11].deff|q~feeder, register, 1
instance = comp, \register_dff[11].deff|q , register_dff[11].deff|q, register, 1
instance = comp, \in[12]~input , in[12]~input, register, 1
instance = comp, \register_dff[12].deff|q~feeder , register_dff[12].deff|q~feeder, register, 1
instance = comp, \register_dff[12].deff|q , register_dff[12].deff|q, register, 1
instance = comp, \in[13]~input , in[13]~input, register, 1
instance = comp, \register_dff[13].deff|q~feeder , register_dff[13].deff|q~feeder, register, 1
instance = comp, \register_dff[13].deff|q , register_dff[13].deff|q, register, 1
instance = comp, \in[14]~input , in[14]~input, register, 1
instance = comp, \register_dff[14].deff|q~feeder , register_dff[14].deff|q~feeder, register, 1
instance = comp, \register_dff[14].deff|q , register_dff[14].deff|q, register, 1
instance = comp, \in[15]~input , in[15]~input, register, 1
instance = comp, \register_dff[15].deff|q , register_dff[15].deff|q, register, 1
instance = comp, \in[16]~input , in[16]~input, register, 1
instance = comp, \register_dff[16].deff|q~feeder , register_dff[16].deff|q~feeder, register, 1
instance = comp, \register_dff[16].deff|q , register_dff[16].deff|q, register, 1
instance = comp, \in[17]~input , in[17]~input, register, 1
instance = comp, \register_dff[17].deff|q~feeder , register_dff[17].deff|q~feeder, register, 1
instance = comp, \register_dff[17].deff|q , register_dff[17].deff|q, register, 1
instance = comp, \in[18]~input , in[18]~input, register, 1
instance = comp, \register_dff[18].deff|q~feeder , register_dff[18].deff|q~feeder, register, 1
instance = comp, \register_dff[18].deff|q , register_dff[18].deff|q, register, 1
instance = comp, \in[19]~input , in[19]~input, register, 1
instance = comp, \register_dff[19].deff|q~feeder , register_dff[19].deff|q~feeder, register, 1
instance = comp, \register_dff[19].deff|q , register_dff[19].deff|q, register, 1
instance = comp, \in[20]~input , in[20]~input, register, 1
instance = comp, \register_dff[20].deff|q~feeder , register_dff[20].deff|q~feeder, register, 1
instance = comp, \register_dff[20].deff|q , register_dff[20].deff|q, register, 1
instance = comp, \in[21]~input , in[21]~input, register, 1
instance = comp, \register_dff[21].deff|q~feeder , register_dff[21].deff|q~feeder, register, 1
instance = comp, \register_dff[21].deff|q , register_dff[21].deff|q, register, 1
instance = comp, \in[22]~input , in[22]~input, register, 1
instance = comp, \register_dff[22].deff|q~feeder , register_dff[22].deff|q~feeder, register, 1
instance = comp, \register_dff[22].deff|q , register_dff[22].deff|q, register, 1
instance = comp, \in[23]~input , in[23]~input, register, 1
instance = comp, \register_dff[23].deff|q~feeder , register_dff[23].deff|q~feeder, register, 1
instance = comp, \register_dff[23].deff|q , register_dff[23].deff|q, register, 1
instance = comp, \in[24]~input , in[24]~input, register, 1
instance = comp, \register_dff[24].deff|q~feeder , register_dff[24].deff|q~feeder, register, 1
instance = comp, \register_dff[24].deff|q , register_dff[24].deff|q, register, 1
instance = comp, \in[25]~input , in[25]~input, register, 1
instance = comp, \register_dff[25].deff|q~feeder , register_dff[25].deff|q~feeder, register, 1
instance = comp, \register_dff[25].deff|q , register_dff[25].deff|q, register, 1
instance = comp, \in[26]~input , in[26]~input, register, 1
instance = comp, \register_dff[26].deff|q~feeder , register_dff[26].deff|q~feeder, register, 1
instance = comp, \register_dff[26].deff|q , register_dff[26].deff|q, register, 1
instance = comp, \in[27]~input , in[27]~input, register, 1
instance = comp, \register_dff[27].deff|q~feeder , register_dff[27].deff|q~feeder, register, 1
instance = comp, \register_dff[27].deff|q , register_dff[27].deff|q, register, 1
instance = comp, \in[28]~input , in[28]~input, register, 1
instance = comp, \register_dff[28].deff|q , register_dff[28].deff|q, register, 1
instance = comp, \in[29]~input , in[29]~input, register, 1
instance = comp, \register_dff[29].deff|q~feeder , register_dff[29].deff|q~feeder, register, 1
instance = comp, \register_dff[29].deff|q , register_dff[29].deff|q, register, 1
instance = comp, \in[30]~input , in[30]~input, register, 1
instance = comp, \register_dff[30].deff|q~feeder , register_dff[30].deff|q~feeder, register, 1
instance = comp, \register_dff[30].deff|q , register_dff[30].deff|q, register, 1
instance = comp, \in[31]~input , in[31]~input, register, 1
instance = comp, \register_dff[31].deff|q , register_dff[31].deff|q, register, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
